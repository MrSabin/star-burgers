services:

  database:
    image: postgres:latest
    container_name: sb-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432'
    env_file:
      - ./star_burger/.env

  frontend:
    container_name: sb-frontend
    build:
      context: ./
      dockerfile: Dockerfile.front
    volumes:
      - bundles_volume:/opt/star-burgers/bundles/

  backend:
    container_name: sb-backend
    build:
      context: ./
      dockerfile: Dockerfile.back
    ports:
      - '8000'
    volumes:
      - bundles_volume:/opt/star-burgers/bundles/
      - media_volume:/opt/star-burgers/media/
      - static_volume:/opt/star-burgers/static/
    env_file:
      - ./star_burger/.env
    command: bash -c 'python manage.py collectstatic --noinput && gunicorn -w 5 -b 0.0.0.0:8000 star_burger.wsgi:application'
    depends_on:
      database:
        condition: service_started
      frontend:
        condition: service_completed_successfully
    restart: unless-stopped

  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: sb-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - media_volume:/opt/star-burgers/media/
      - static_volume:/opt/star-burgers/static/
    depends_on:
      - backend
      - frontend
volumes:
  postgres:
  bundles_volume:
  media_volume:
  static_volume:
